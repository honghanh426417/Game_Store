@model Cart

@{
    ViewData["Title"] = "Cart";
    Layout = "_LayoutHeaderOnly";

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="~/css/HomePage.css" asp-append-version="true" />

    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
          integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
          crossorigin="anonymous"
          referrerpolicy="no-referrer" />
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            background-color: #f4f4f4;
            padding: 0 ;
        }

        .cart-container {
      
            color: black;
            max-width: 800px;
            margin: 30px 300px;
            background-color: #fff;
            padding: 40px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .list-game {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            max-height: 450px;
            overflow-y: auto;
        }


        .game-item {
            width: 100%;
            border: 1px solid #ddd;
            padding: 10px;
            box-sizing: border-box;
            margin-bottom: 10px;
            display: grid;
            grid-template-columns: 5% 20% 40% 15% 10%;
            align-items: center;
        }

        .game-img {
            width: 80px;
            height: 85px;
            overflow: hidden;
            border-radius: 4px;
        }

            .game-img img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .game-details {
            flex: 1;
        }

        .game-name {
            font-size: 16px;
            margin-bottom: 5px;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
        }

        .game-price {
            font-weight: bold;
        }

        .cart-trash {
            cursor: pointer;
            background: none;
            border: none;
            font-size: 16px;
            color: #f02c0a;
        }

        .total-section {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
        }

        .price {
            font-size: 20px;
            font-weight: 600;
        }

        .checkout-btn {
            background-color: #4caf50;
            color: #fff;
            padding: 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            .checkout-btn:hover {
                background-color: #45a049;
            }

        #selectAll {
            margin-top: 10px;
        }
    </style>
</head>
<body>

    <div class="cart-container">
        <h2>Shopping Cart</h2>

        <div>
            <input type="checkbox" id="selectAll" onchange="toggleSelectAll()" />
            <label for="selectAll">Select All</label>
        </div>
        <div class="list-game">
            @if (Model != null && Model.Lines != null)
            {
                @foreach (var line in Model.Lines)
                {
                    <div class="game-item" onclick="toggleSelection(this, '@line.Product.Name', @line.Product.Price)">
                        <input type="checkbox" class="game-checkbox" />
                        <div class="game-img">
                            <img src="@Url.Content(line.Product.ImageGame)" alt="@line.Product.Name" />
                        </div>
                        <h3>@line.Product.Name</h3>
                        <div class="game-price">$@line.Product.Price</div>
                        <a class="cart-trash" href="/Cart/RemoveFromCart/?Id=@line.Product.ProductId">
                            <i class="fa-solid fa-trash"></i>Delete
                        </a>

                    </div>
                }
            }
        </div>
        <div class="total-section">
            <div class="total-price" style="font-size: 18px;">Total: <span class="price" id="totalPrice">$0.00</span></div>

            <button class="checkout-btn" onclick="checkout()">Checkout</button>
        </div>
        <a style="color: rgb(37, 55, 110); text-decoration: underline; font-size: 12px;" href="@Url.Action("Index", "Product")">View More Game</a>   

    </div>


    <script>function toggleSelection(element, name, price) {
            const checkbox = element.querySelector(".game-checkbox");
            checkbox.checked = !checkbox.checked;
            updateTotalPrice();
        }

        function updateTotalPrice() {
            const selectedGames = document.querySelectorAll(
                ".game-checkbox:checked"
            );
            let totalPrice = 0;

            selectedGames.forEach((game) => {
                const price = parseFloat(
                    game.parentNode
                        .querySelector(".game-price")
                        .textContent.replace("$", "")
                );
                totalPrice += price;
            });

            const totalPriceElement = document.getElementById("totalPrice");
            totalPriceElement.textContent = `$${totalPrice.toFixed(2)}`;

            document.querySelector(".checkout-btn").style.display =
                selectedGames.length > 0 ? "block" : "none";
        }

        function checkout() {
            const selectedGames = document.querySelectorAll(
                ".game-checkbox:checked"
            );
            const selectedGameNames = Array.from(selectedGames)
                .map((game) => game.parentNode.querySelector("h3").textContent)
                .join(", ");

            alert(
                `Checkout successful!\nSelected Games: ${selectedGameNames}\nTotal Price: $${parseFloat(
                    document.getElementById("totalPrice").textContent.replace("$", "")
                ).toFixed(2)}`
            );
        }

        function toggleSelectAll() {
            const selectAllCheckbox = document.getElementById("selectAll");
            const gameCheckboxes = document.querySelectorAll(".game-checkbox");

            gameCheckboxes.forEach((checkbox) => {
                checkbox.checked = selectAllCheckbox.checked;
            });

            updateTotalPrice();
        }

        function removeGame(button) {
            const gameItem = button.parentNode;
            const checkbox = gameItem.querySelector(".game-checkbox");
            checkbox.checked = false;

            gameItem.remove();
            updateTotalPrice();
        }</script>
</body>
</html>
